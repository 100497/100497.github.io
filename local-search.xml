<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>0015.Hexo Fluid在slogan和footer添加一言</title>
    <link href="/1495906482/"/>
    <url>/1495906482/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="-swig2-"><a class="markdownIt-Anchor" href="#-swig2-"></a> 0015.Hexo Fluid在slogan和footer添加一言</h1><div class="note note-success">            <p>原文参考链接：<br /><a href="https://www.zywvvd.com/notes/hexo/theme/fluid/fluid-yiyan/yiyan/">https://www.zywvvd.com/notes/hexo/theme/fluid/fluid-yiyan/yiyan/</a></p>          </div><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p>一言网（<a href="http://hitokoto.cn">hitokoto.cn</a>）创立于 2016 年，隶属于萌创团队，网站主要提供一句话服务。<br />‘一言’ 的初衷——动漫也好、小说也好、网络也好，不论在哪里，我们总会看到有那么一两个句子能穿透你的心。我们把这些句子汇聚起来，形成一言网络，以传递更多的感动。<br />简单来说，一言指的就是一句话，可以是动漫中的台词，也可以是网络上的各种小段子。 或是感动，或是开心，有或是单纯的回忆。来到这里，留下你所喜欢的那一句句话，与大家分享，这就是一言存在的目的。<br />官网链接：<a href="https://developer.hitokoto.cn/">https://developer.hitokoto.cn/</a></p><h2 id="slogan位置添加一言"><a class="markdownIt-Anchor" href="#slogan位置添加一言"></a> slogan位置添加“一言”</h2><p>在 Fluid 主题配置文件修改 index/slogan 配置的 url 和 keys</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs autoit">slogan:<br>  enable: <span class="hljs-literal">true</span><br><br>  <span class="hljs-meta"># 为空则按 hexo config.subtitle 显示</span><br>  <span class="hljs-meta"># If empty, text based on `subtitle` in hexo config</span><br>  text: <span class="hljs-string">&quot;明眸如初，又见苍岚&quot;</span><br><br>  <span class="hljs-meta"># 通过 API 接口作为首页副标题的内容，必须返回的是 JSON 格式，如果请求失败则按 text 字段显示，该功能必须先开启 typing 打字机功能</span><br>  <span class="hljs-meta"># Subtitle of the homepage through the API, must be returned a JSON. If the request fails, it will be displayed in `text` value. This feature must first enable the typing animation</span><br>  api:<br>    enable: <span class="hljs-literal">true</span><br><br>    <span class="hljs-meta"># 请求地址</span><br>    <span class="hljs-meta"># Request url</span><br>    url: <span class="hljs-string">&quot;https://v1.hitokoto.cn/&quot;</span><br><br>    <span class="hljs-meta"># 请求方法</span><br>    <span class="hljs-meta"># Request method</span><br>    <span class="hljs-meta"># Available: GET | POST | PUT</span><br>    method: <span class="hljs-string">&quot;GET&quot;</span><br><br>    <span class="hljs-meta"># 请求头</span><br>    <span class="hljs-meta"># Request headers</span><br>    headers: &#123;&#125;<br><br>    <span class="hljs-meta"># 从请求结果获取字符串的取值字段，最终必须是一个字符串，例如返回结果为 &#123;<span class="hljs-string">&quot;data&quot;</span>: &#123;<span class="hljs-string">&quot;author&quot;</span>: <span class="hljs-string">&quot;fluid&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;An elegant theme&quot;</span>&#125;&#125;, 则取值字段为 [<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-string">&#x27;content&#x27;</span>]；如果返回是列表则自动选择第一项</span><br>    <span class="hljs-meta"># The value field of the string obtained from the response. For example, the response content is &#123;<span class="hljs-string">&quot;data&quot;</span>: &#123;<span class="hljs-string">&quot;author&quot;</span>: <span class="hljs-string">&quot;fluid&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;An elegant theme&quot;</span>&#125;&#125;, the expected `keys: [<span class="hljs-string">&#x27;data&#x27;</span>,<span class="hljs-string">&#x27;content&#x27;</span>]`<span class="hljs-comment">; if the return is a list, the first item is automatically selected</span></span><br>    keys: [<span class="hljs-string">&#x27;hitokoto&#x27;</span>]<br></code></pre></td></tr></table></figure><h2 id="footer-位置添加一言"><a class="markdownIt-Anchor" href="#footer-位置添加一言"></a> footer 位置添加“一言”</h2><p>如下代码加入到 fluid\layout_partial\footer\statistics.ejs 文件中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;statistics&quot;</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://developer.hitokoto.cn/&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;hitokoto_text&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: #DDD;&quot;</span>  <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;hitokoto&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot;</span> <span class="hljs-attr">defer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>颜色与超链接可以自己设置<br />然后就可以在网页 footer 位置看到 ‘一言’</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <categories>
      
      <category>Fluid主题美化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0007.制作U盘启动工具</title>
    <link href="/1411598102/"/>
    <url>/1411598102/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="-swig2-"><a class="markdownIt-Anchor" href="#-swig2-"></a> 0007.制作U盘启动工具</h1><div class="note note-success">            <p>原文参考链接：<br />无</p>          </div><h2 id="rufus"><a class="markdownIt-Anchor" href="#rufus"></a> Rufus</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">https:</span>//rufus.ie/<span class="hljs-built_in">zh</span>/<br></code></pre></td></tr></table></figure><h2 id="ventoy"><a class="markdownIt-Anchor" href="#ventoy"></a> Ventoy</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>www.ventoy.net<span class="hljs-regexp">/cn/i</span>ndex.html<br></code></pre></td></tr></table></figure></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>0006.Windows/Office激活工具</title>
    <link href="/1274615110/"/>
    <url>/1274615110/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="-swig2-"><a class="markdownIt-Anchor" href="#-swig2-"></a> 0006.Windows/Office激活工具</h1><div class="note note-success">            <p>原文参考链接：无</p>          </div><h2 id="heu-kms-activator"><a class="markdownIt-Anchor" href="#heu-kms-activator"></a> HEU KMS Activator</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/zbezj/</span>HEU_KMS_Activator<br></code></pre></td></tr></table></figure><h2 id="microsoft-activation-scripts"><a class="markdownIt-Anchor" href="#microsoft-activation-scripts"></a> Microsoft-Activation-Scripts</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/massgravel/</span>Microsoft-Activation-Scripts<br></code></pre></td></tr></table></figure></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <categories>
      
      <category>系统</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>Office</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0005.U盘目录</title>
    <link href="/1041770946/"/>
    <url>/1041770946/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="-swig0-"><a class="markdownIt-Anchor" href="#-swig0-"></a> 0005.U盘目录</h1><p>32G 黑色塑料金士顿 USB3.0  ventoyU盘启动 我的win11系统镜像备份</p><p>64G 白色塑料朗科 USB3.0 一些文件的备份</p><p>64G 黑色金属朗科 USB3.0 ventoyU盘启动 win10 11 7系统,office2019,安装镜像<br />ventoy,微PE工具箱,rufus程序</p><p>16G 银色金属闪迪 USB3.0 ventoy win10 11系统安装镜像</p><p>32G 深灰色金属雷克沙 USB2.0 微PE工具箱V2.3</p><p>32G 银色金属金士顿 USB2.0 大白菜PE系统</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>0004.Visual Studio Code列选择（垂直选中）快捷键方法</title>
    <link href="/3012221305/"/>
    <url>/3012221305/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="-swig0-"><a class="markdownIt-Anchor" href="#-swig0-"></a> 0004.Visual Studio Code列选择（垂直选中）快捷键方法</h1><ul><li>VSCode列选择快捷键<br />alt+shift+鼠标左键拖动<br />直接使用鼠标中键拖动选择</li></ul><h2 id="0x01"><a class="markdownIt-Anchor" href="#0x01"></a> 0x01</h2><h2 id="0x02"><a class="markdownIt-Anchor" href="#0x02"></a> 0x02</h2><h2 id="0x03"><a class="markdownIt-Anchor" href="#0x03"></a> 0x03</h2><h2 id="0x04"><a class="markdownIt-Anchor" href="#0x04"></a> 0x04</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <categories>
      
      <category>Visual Studio Code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Visual Studio Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0003.Hexo Fluid 美化</title>
    <link href="/430630325/"/>
    <url>/430630325/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="-swig0-"><a class="markdownIt-Anchor" href="#-swig0-"></a> 0003.Hexo Fluid 美化</h1><div class="note note-success">            <p>参考<br /><a href="https://cloud.tencent.com/developer/article/2142662">https://cloud.tencent.com/developer/article/2142662</a></p>          </div><p>发布于 2022-10-27 21:16:59<br />8730<br />举报<br />文章被收录于专栏：EmoryHuang’s Blog<br />本博客的主题已由 Fluid 改为 Butterfly, 部分功能可能失效，请注意！</p><p>Hexo + Fluid 美化<br />Fluid 简介<br />Fluid 是基于 Hexo 的一款 Material Design 风格的主题，由 Fluid-dev 负责开发与维护。</p><p>主题 GitHub: <a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>预览网站：</p><p>Fluid’s Blog<br />zkqiang’s blog<br />Fluid 主题安装<br />方式一<br />Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入博客目录执行命令：</p><p>npm install --save hexo-theme-fluid<br />复制<br />提示：如果 npm 速度慢或者安装失败，可以通过淘宝镜像安装，即使用如下命令</p><p>cnpm install --save hexo-theme-fluid<br />复制<br />然后在博客目录下创建 _config.fluid.yml，将主题的 config.yml 内容复制进去。</p><p>方式二<br />下载 最新 release 版本 解压到 Hexo 博客目录中的 themes 目录，并将解压出的文件夹重命名为 fluid。</p><p>指定 Fluid 主题<br />如下修改 Hexo 博客目录中的 _config.yml：</p><p>theme: fluid  # 指定主题<br />language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改<br />复制<br />Fluid 美化<br />基础配置修改<br />对于 Fluid 主题的基础配置修改，在 官方配置指南 以及 theme/fluid/_config.yml 或者 _config.fluid.yml 中有详细的提示说明，这里不再赘述。</p><p>注意</p><p>本文中的 &quot; 博客配置 &quot; 指的 Hexo 博客目录下的 _config.yml，&quot; 主题配置 &quot; 指的是 theme/fluid/_config.yml 或者 _config.fluid.yml ，注意区分</p><p>添加网站运行时间<br />页脚添加网站运行时间，只需要在主题配置中的 footer: content 添加：</p><p>footer:<br />content: ’<br /><div><br /><span id="timeDate">载入天数…</span><br /><span id="times">载入时分秒…</span><br /><script src="/js/duration.js"></script><br /></div><br />’<br />复制<br />之后在主题目录下创建 source/js/duration.js，内容如下：</p><p>var now = new Date();<br />function createtime() {<br />var grt= new Date(“03/03/2021 12:00:00”);//在此处修改你的建站时间，格式：月/日/年 时:分:秒<br />now.setTime(now.getTime()+250);<br />days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);<br />hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);<br />if(String(hnum).length ==1 ){hnum = “0” + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);<br />mnum = Math.floor(minutes); if(String(mnum).length ==1 ){mnum = “0” + mnum;}<br />seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);<br />snum = Math.round(seconds); if(String(snum).length ==1 ){snum = “0” + snum;}<br />document.getElementById(“timeDate”).innerHTML = &quot;本站已安全运行 “+dnum+” 天 “;<br />document.getElementById(“times”).innerHTML = hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒”;<br />}<br />setInterval(“createtime()”,250);<br />复制<br />将建站时间修改为你自己的建站时间，即可在页脚加入网站运行时间。</p><p>添加一言<br />在主题配置 _config.yml 中找到 custom_head ，修改如下：</p><p>custom_head: ’<br /><!-- 一言 --><br /><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><br />’<br />复制<br />修改完成之后，在任意地方添加如下代码即可获取一言</p><p id="hitokoto">:D 获取中...</p>复制添加 GitHub 日历热力图这里提供一个简单的 API Github Chart API<p>直接在需要的位置添加如下 HTML 语句即可，注意将 GitHub 用户名修改为你自己的。</p><a href="https://ghchart.rshah.org/emoryhuang" title="emoryhuang's Github chart" class="gallery-item"><img src="https://ghchart.rshah.org/emoryhuang" alt="emoryhuang's Github chart" /></a>复制效果如下所示：<p>emoryhuang’s Github chart<br />也可以改变颜色，只需要修改为 hex 颜色代码即可</p><a href="https://ghchart.rshah.org/409ba5/emoryhuang" title="emoryhuang's Github chart" class="gallery-item"><img src="https://ghchart.rshah.org/409ba5/emoryhuang" alt="emoryhuang's Github chart" /></a>复制<p>emoryhuang’s Github chart<br />添加看板娘<br />向你的 Hexo 里放上一只二次元看板娘，项目地址</p><p>演示：<a href="https://l2dwidget.js.org/dev.html">https://l2dwidget.js.org/dev.html</a></p><p>模型预览：<a href="https://huaji8.top/post/live2d-plugin-2.0/">https://huaji8.top/post/live2d-plugin-2.0/</a></p><p>安装<br />在 Git Bash 中安装模块：</p><p>npm install --save hexo-helper-live2d<br />复制<br />or</p><p>yarn add hexo-helper-live2d<br />复制<br />配置<br />向 Hexo 的 _config.yml 文件添加配置，例子如下</p><p>live2d:<br />enable: true<br />scriptFrom: local<br />pluginRootPath: live2dw/<br />pluginJsPath: lib/<br />pluginModelPath: assets/<br />tagMode: false<br />debug: false<br />model:<br />use: live2d-widget-model-wanko  ## 更换为你的模型<br />display:<br />position: right<br />width: 150<br />height: 300<br />mobile:<br />show: true<br />react:<br />opacity: 0.7<br />复制<br />点这里 可以查看现有的模型</p><p>在 Git Bash 中安装喜欢的模型</p><p>npm install 模型的包名<br />复制<br />将包名输入位于 _config.yml 的 model.use 中。</p><p>hexo clean<br />hexo d -g<br />复制<br />添加背景黑色线条</p><p>背景黑色线条js代码</p><p>!function(){function o(w,v,i){return w.getAttribute(v)||i}function j(i){return document.getElementsByTagName(i)}function l(){var i=j(“script”),w=i.length,v=i[w-1];return{l:w,z:o(v,“zIndex”,-1),o:o(v,“opacity”,0.5),c:o(v,“color”,“0,0,0”),n:o(v,“count”,99)}}function k(){r=u.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,n=u.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}function b(){e.clearRect(0,0,r,n);var w=[f].concat(t);var x,v,A,B,z,y;t.forEach(function(i){i.x+=i.xa,i.y+=i.ya,i.xa*=i.x&gt;r||i.x&lt;0?-1:1,i.ya*=i.y&gt;n||i.y&lt;0?-1:1,e.fillRect(i.x-0.5,i.y-0.5,1,1);for(v=0;v&lt;w.length;v++){x=w[v];if(i!==x&amp;&amp;null!==x.x&amp;&amp;null!<mark>x.y){B=i.x-x.x,z=i.y-x.y,y=B<em>B+z</em>z;y&lt;x.max&amp;&amp;(x</mark>=f&amp;&amp;y&gt;=x.max/2&amp;&amp;(i.x-=0.03<em>B,i.y-=0.03</em>z),A=(x.max-y)/x.max,e.beginPath(),e.lineWidth=A/2,e.strokeStyle=“rgba(”+s.c+“,”+(A+0.2)+“)”,e.moveTo(i.x,i.y),e.lineTo(x.x,x.y),e.stroke())}}w.splice(w.indexOf(i),1)}),m(b)}var u=document.createElement(“canvas”),s=l(),c=“c_n”+s.l,e=u.getContext(“2d”),r,n,m=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(i){window.setTimeout(i,1000/45)},a=Math.random,f={x:null,y:null,max:20000};u.id=c;u.style.cssText=“position:fixed;top:0;left:0;z-index:”+s.z+“;opacity:”+s.o;j(“body”)[0].appendChild(u);k(),window.onresize=k;window.onmousemove=function(i){i=i||window.event,f.x=i.clientX,f.y=i.clientY},window.onmouseout=function(){f.x=null,f.y=null};for(var t=[],p=0;s.n&gt;p;p++){var h=a()<em>r,g=a()<em>n,q=2</em>a()-1,d=2</em>a()-1;t.push({x:h,y:g,xa:q,ya:d,max:6000})}setTimeout(function(){b()},100)}();<br />复制<br />将上面的代码复制，并在此目录下 themes/fluid/source/js/DynamicLine.js 创建文件，将代码全部粘贴进去。</p><p>然后在主题配置 _config.yml 中找到 custom_js 或者 custom_css，修改如下：</p><p>custom_js:</p><ul><li>/js/DynamicLine.js<br />复制<br />如果不想这么麻烦或者不需要自行修改的话，可以使用我的提供的 CDN</li></ul><p>在主题配置 _config.yml 中找到 custom_js 或者 custom_css，修改如下：</p><p>（效果添加或去除注释 # 即可使用）</p><p>custom_js:</p><ul><li><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/DynamicRibbon.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/DynamicRibbon.min.js</a> # 动态彩带</li><li><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/runtime.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/runtime.min.js</a> # 运行时间</li><li><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/Ribbon.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/Ribbon.min.js</a> # 静态彩带</li><li><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/DynamicLine.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/DynamicLine.min.js</a> # 动态黑色线条</li><li><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/snowflake.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/snowflake.min.js</a> # 小雪花飘落</li><li><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/Cherry.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/Cherry.min.js</a> #樱花飘落</li><li><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/star.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/star.min.js</a> # 鼠标跟随小星星</li><li><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/containsWord.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/containsWord.min.js</a> # 鼠标点击出字</li><li><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/love.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/love.min.js</a> #鼠标点击出爱心</li></ul><p>custom_css:</p><ul><li><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/shubiao.css">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/shubiao.css</a> #鼠标指针</li><li><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/scroll.css">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/scroll.css</a> # 滚动条颜色</li><li><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/gradient.css">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/gradient.css</a> # 头部打字机颜色效果渐变<br />复制<br />获取源码：</li></ul><p>将 <a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/DynamicLine.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/DynamicLine.js</a> 输入地址框即可</p><p>注意去除 .min 这是经过压缩之后的</p><p>后面类似的效果本文就不再放源码了，按上面的方法搜一下就好</p><p>添加动态彩带</p><p><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/DynamicRibbon.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/DynamicRibbon.min.js</a> # 动态彩带<br />复制<br />添加静态彩带</p><p><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/Ribbon.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/Ribbon.min.js</a> # 静态彩带<br />复制<br />添加小雪花飘落效果</p><p><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/snowflake.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/snowflake.min.js</a> # 小雪花飘落<br />复制<br />添加樱花飘落效果</p><p><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/Cherry.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/Cherry.min.js</a> #樱花飘落<br />复制<br />鼠标跟随小星星</p><p><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/star.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/star.min.js</a> # 鼠标跟随小星星<br />复制<br />鼠标点击出字</p><p><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/containsWord.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/containsWord.min.js</a> # 鼠标点击出字<br />复制<br />鼠标点击出爱心</p><p><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/love.min.js">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/love.min.js</a> # 鼠标点击出爱心<br />复制<br />滚动条颜色</p><p><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/scroll.css">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/scroll.css</a> # 滚动条颜色<br />复制<br />头部打字机颜色效果渐变</p><p><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/gradient.css">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/gradient.css</a> # 头部打字机颜色效果渐变<br />复制<br />更换鼠标指针样式</p><p><a href="//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/shubiao.css">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/shubiao.css</a> #鼠标指针</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>0002.Hexo Fluid 关闭自动创建文章的资源文件夹</title>
    <link href="/464455307/"/>
    <url>/464455307/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="-swig1-"><a class="markdownIt-Anchor" href="#-swig1-"></a> 0002.Hexo Fluid 关闭自动创建文章的资源文件夹</h1><p>config.yml 文件中的 post_asset_folder 选项设为 true 来打开。</p><p>_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt; </code>命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <categories>
      
      <category>Fluid主题美化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0001.插件hexo-filter-jsdelivr-auto-fallback问题</title>
    <link href="/829110445/"/>
    <url>/829110445/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="-swig0-"><a class="markdownIt-Anchor" href="#-swig0-"></a> 0001.插件hexo-filter-jsdelivr-auto-fallback问题</h1><ul><li>不显示评论区</li><li>不显示目录</li><li>不显示标题</li><li>打字机问题</li></ul><p>````暂时不用此插件``````</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <categories>
      
      <category>Hexo插件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>问题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0011.Hexo Fluid 主題使用指南</title>
    <link href="/1025348666/"/>
    <url>/1025348666/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="hexo-fluid-主題使用指南"><a class="markdownIt-Anchor" href="#hexo-fluid-主題使用指南"></a> Hexo Fluid 主題使用指南</h1><p>主頁 Banner 大圖<br />所有的頁面（含首頁、關於頁、文章頁…等），都有個 banner_img 的屬性，在 Fluid 的 _config.yml 配置檔案內設定。<br />以首頁為例，請到 _config.yml 檔案內，找到以下程式碼：</p><p>#---------------------------</p><h1 id="首页"><a class="markdownIt-Anchor" href="#首页"></a> 首页</h1><h1 id="index-page"><a class="markdownIt-Anchor" href="#index-page"></a> Index Page</h1><p>#---------------------------<br />index:<br />banner_img: /img/banner.jpg  # 首页 Banner 头图，以下相同<br />banner_img_height: 100  # 头图高度，屏幕百分比，available: 0 - 100<br />banner 的路徑（banner_img）和高度（banner_img_height）就在這邊設置。</p><p>圖片來源<br />建議將圖片放置在 /fluid/source/img/ 目錄底下，對應的路徑填寫為：/img/你的圖片名稱。</p><p>例如<br />首頁的圖片是 banner.jpg，圖片應存放在：/fluid/source/img/banner.jpg，<br />banner_img 的指定路徑為：/img/banner.jpg。</p><p>同理，其他的頁面也是如此設置，如：文章頁、關於我、分類頁、標籤頁等。</p><p>#---------------------------</p><h1 id="文章頁"><a class="markdownIt-Anchor" href="#文章頁"></a> 文章頁</h1><h1 id="archive-page"><a class="markdownIt-Anchor" href="#archive-page"></a> Archive Page</h1><p>#---------------------------<br />archive:<br />banner_img: /img/articles.jpg<br />banner_img_height: 80  # available: 0 - 100<br />#---------------------------</p><h1 id="分類頁"><a class="markdownIt-Anchor" href="#分類頁"></a> 分類頁</h1><h1 id="categories-page"><a class="markdownIt-Anchor" href="#categories-page"></a> Categories Page</h1><p>#---------------------------<br />category:<br />banner_img: /img/categories.jpg<br />banner_img_height: 80  # available: 0 - 100<br />一開始筆者會把 public/img 和 Fluid 主題包內的 source/img 混淆，不知道圖片正確應該放置到哪邊？<br />官方說建議放到 source/img，但筆者直接把圖片存到 public/img 卻也能正常顯示。<br />且放到 source/img 內的圖片，上傳到部落格後，便會發現 public/img 內也同步產生了那張圖片。</p><p>於是筆者查了一下官方的主題配置文檔，官方對 source 的解釋如下：</p><p>source<br />原始檔案資料夾，除了模板以外的 Asset，例如 CSS、JavaScript 檔案等，應該放在這個資料夾。檔案或資料夾開頭名稱為 _（底線）或隱藏檔案會被忽略。<br />如果檔案可以被渲染的話，會經過處理再儲存到 public 資料夾，否則會直接拷貝到 public 資料夾。</p><p>以上說明筆者理解為：「你存在 source/img 內的圖片，會被直接拷貝到 public/img。」</p><p>於是後來寫文章時，筆者都直接把圖片存在 public/img 內了。雖然不確定這樣存圖片會不會有問題，不過到目前為止都沒有什麼問題產生。（自以為這樣檔案會比較小的設計師…(´・ω・`)</p><p>於是就發生了悲劇<br />沒錯，就在剛剛，筆者才剛寫完上面的介紹，發現電腦好當啊！網站怎麼跑得這麼慢！<br />就想起了 Hexo 有一個清除快取的功能，很開心的按下去之後，發現整個網站的圖片都消失了！！<br />筆者整個 public 資料夾都不見了啊啊啊啊！！！！（崩潰</p><p>不知道是不是因為筆者在開啟 server 的狀態下按了 Hexo clean 的關係，整個 public 都被刪除了。<br />嚇得平常不動腦的筆者光速的動起了腦袋，趕快先到 Github 把線上還沒壞掉的檔案下載下來，再自己創建一個 public 資料夾，把載下來的檔案都丟進去，網站圖片才回來了…真是嚇死了(´; ω ;`)</p><p>於是驚魂未定的筆者再查了一些資料，得出了以下結論：</p><p>千萬別在開啟 server 的狀態下按 Hexo clean，Hexo 會把整個 public 資料夾當作已產生的靜態檔案給清除。<br />網站的大圖 banner、和主題有關的原始檔案(例如：favicon.png、loading.gif…等），皆須存在 fluid/source/img/ 內。<br />文章的 banner、文章內的說明圖等，皆須存在 fluid/source/img/ 內，但也可以存在 blog/source 內，再自己新增一個 img 資料夾，將圖片都歸類進去。文章的 .md 檔案也會在 source/_posts 內。<br />public 資料夾僅是上傳到線上後會產生的靜態檔案。<br />原來之前筆者都把官方說的 source/img 和主題的 fluid/source/img/ 混淆了！<br />直到發生悲劇才知道原來官方指的是最外層的 source 資料夾，該說是因禍得福嗎…？（淚</p><p>部落格標題與 header 選單<br />筆者的部落格標題「來點鳥」和首頁的描述「Give me some bird」，皆是在 blog 的 _config.yml 內設置的：</p><h1 id="site"><a class="markdownIt-Anchor" href="#site"></a> Site</h1><p>title: 來點鳥<br />subtitle: ‘Give me some bird’<br />description: ‘’<br />keywords:<br />author: GiGi<br />language: zh-tw<br />timezone: ‘’<br />header 選單則是在 Fluid 主題的 _config.yml 內設置：</p><p>#---------------------------</p><h1 id="页头"><a class="markdownIt-Anchor" href="#页头"></a> 页头</h1><h1 id="header"><a class="markdownIt-Anchor" href="#header"></a> Header</h1><p>#---------------------------<br />navbar:<br />blog_title:  # 导航栏左侧的标题，为空则按 hexo config.title 显示<br />menu:  # 可自行增减，若想减去某个入口，可以将值留空，显示文本关联 languages<br />home: /<br />about: /about/ # 關於<br />archive: /archives/ # 文章<br />category: /categories/ # 分類<br />tag: /tags/ # 標籤<br />#links: /links/  # 友链页，把前面#去掉即可展示<br />左邊是選單名稱（about），右邊是對應的連結位置（/about/）。<br />若需增加選單，直接往下新增再設定對應連結，若需刪除默認選單，直接將對應位置留空即可。</p><p>語言問題<br />因為此主題為簡體中文，若想將選單修改為 繁體中文，請到 themes/fluid/languages 內，將「zh-CN.yml」檔案複製一份，重新命名為「zh-tw.yml」，再將裡面所有的簡體中文都修改為繁體中文。<br />詳細步驟可以參考筆者之前的文章 如何更換 Hexo 主題，有語言的相關設置。</p><p>以下為筆者修改好的繁體中文檔，不一定要按照原本的簡體中文命名，可以自由更改，再對照上方 header 選單（頁頭）的位置即可：</p><p>search:<br />title: 搜尋<br />keyword: 關鍵字<br />status:<br />success: v<br />error: x<br />postTotal: 共計 %d 篇文章<br />paginator:<br />pre: 上一頁<br />next: 下一頁<br />post:<br />toc: 目錄<br />home:<br />title: 首頁<br />archive:<br />title: 文章<br />subtitle: 文章<br />tag:<br />title: 標籤<br />subtitle: 標籤<br />category:<br />title: 分類<br />subtitle: 分類<br />about:<br />title: 關於<br />subtitle: 關於<br />page404:<br />title: 頁面不見啦！<br />subtitle: 頁面不見啦！<br />links:<br />title: 友情連結<br />subtitle: 友情連結<br />關於頁<br />關於頁的 banner 和作者頭像、作者名稱、作者下方描述、相關連結，皆在 Fluid 主題的 _config.yml 內設置：</p><p>#---------------------------</p><h1 id="关于页"><a class="markdownIt-Anchor" href="#关于页"></a> 关于页</h1><h1 id="about-page"><a class="markdownIt-Anchor" href="#about-page"></a> About Page</h1><p>#---------------------------<br />about:  # 以下仅为页面顶部的基本信息，更多内容请在 ./pages/about.md 中编辑，支持 markdown 和 HTML<br />md_path: ./pages/about.md  # 关于页文档的相对路径，可以按相对文档设置主题之外的路径，从而避免更新冲突<br />banner_img: /img/about.jpg<br />banner_img_height: 80  # available: 0 - 100<br />avatar: /img/avatar.png # 头像<br />name: GiGi<br />introduce: 網頁設計師 # 支持 HTML<br />icons: # 更多图标可从 <a href="https://fontawesome.com/v5.10.0/icons?d=gallery">https://fontawesome.com/v5.10.0/icons?d=gallery</a> 查找，并以 “图标名: url” 的格式添加在下方<br />“fab fa-github”: <a href="https://github.com">https://github.com</a><br />“fab fa-twitter”: <a href="https://twitter.com">https://twitter.com</a><br />“fab fa-weixin”:  # 微信图标，这个是特殊图标，点击不会跳转而是悬浮二维码，所以链接需要对应二维码图片地址<br />內容<br />關於我的「內容」則是在 fluid/pages/about.md 內編輯。（支援 Markdown 和 HTML）<br />Fluid 官方有說明，<a href="http://about.md">about.md</a> 可以在主題配置中修改位置，建議修改到 fluid 目錄外，避免更新主題時遺失内容，例如：</p><p>about:<br />md_path: …/…/source/_data/about.md  # 實際位置： blog/source/_data/about.md<br />筆者按照說明，到 blog/source 內新增一個 _data 資料夾，再將原本的 <a href="http://about.md">about.md</a> 檔案移到 _data 內。</p><p>頭像<br />最重要的大頭貼，筆者目前是默認頭像尚未更改，如要更換頭貼，僅需更改或覆蓋 fluid/source/img/avatar.png 即可。</p><p>相關連結 icon<br />官方的 icon 圖示，均引用自目前做網站最多人使用的免費 icon 圖庫 Font Awesome，關於 Font Awesome 的詳細說明與使用技巧可以參考這篇文章：5 分鐘快速了解 FontAwesome 5。</p><p>若想增加相關連結，只需按照原有規則複製一份新增在下方，再將圖示名稱（fa-github）更改為社群名稱或在 Font Awesome 搜尋到的圖示名稱，右方貼上網址即可，例如：</p><p>“fab fa-github”: <a href="https://github.com">https://github.com</a><br />“fab fa-twitter”: <a href="https://twitter.com">https://twitter.com</a><br />“fab fa-facebook”: <a href="https://www.facebook.com">https://www.facebook.com</a> # 新增一個 facebook 的連結</p><p>在 Font Awesome 搜尋到的 facebook icon</p><p>紅框部分為此圖示的名稱「fab fa-facebook」</p><p>文章頁<br />文章在首頁的小圖<br />在每篇文章的開頭中配置 index_img 屬性。</p><hr /><h2 id="title-文章標題tags-hexo-fluidindex_img-imgpicturejpgdate-2020-03-01-180000"><a class="markdownIt-Anchor" href="#title-文章標題tags-hexo-fluidindex_img-imgpicturejpgdate-2020-03-01-180000"></a> title: 文章標題<br />tags: [Hexo, Fluid]<br />index_img: /img/picture.jpg<br />date: 2020-03-01 18:00:00</h2><p>以下是文章内容<br />圖片的存取位置和 banner 相同，/img/picture.jpg 對應的存取位置應放在 fluid/source/img/picture.jpg。<br />目錄可以自行定義，但必須放在 source 目錄底下，注意必須以 / 開頭。<br />（ / 為絕對路徑，關於絕對路徑和相對路徑的解釋，可以參考這篇文章：Web 基本觀念 - 相對路徑 和 絕對路徑）</p><p>筆者是放在 blog/source/img 底下再新增一個 article 資料夾，在 article 內新增一個 banner 資料夾，把每一篇文章的 banner 都歸類進去，覺得這樣比較好整理圖片。</p><p>index_img: /img/article/banner/banner-04.jpg # 代表第四篇文章的 banner<br />文章內大圖<br />在每篇文章的開頭中配置 banner_img 屬性，圖片的存取位置同上。<br />筆者的習慣是裡外一致（首頁小圖和文章內頁同一張），也可以指定不同圖片。</p><hr /><h2 id="title-文章標題tags-hexo-fluidindex_img-imgpicturejpgbanner_img-imgpost_bannerjpgdate-2020-03-01-180000"><a class="markdownIt-Anchor" href="#title-文章標題tags-hexo-fluidindex_img-imgpicturejpgbanner_img-imgpost_bannerjpgdate-2020-03-01-180000"></a> title: 文章標題<br />tags: [Hexo, Fluid]<br />index_img: /img/picture.jpg<br />banner_img: /img/post_banner.jpg<br />date: 2020-03-01 18:00:00</h2><p>以下是文章内容<br />文章內容圖片<br />在文章內插入以下程式碼，再指定圖片位置，存取位置同上。</p><p><a href="/img/article-pic.jpg" class="gallery-item"><img src="/img/article-pic.jpg" alt="" /></a><br />在文章內加入標籤 tags<br />在每篇文章的開頭加入 tags 屬性。<br />整個網站文章中有用到的標籤會被集中到標籤頁，字級越大表示與此標籤相關的文章數越多。</p><hr /><h2 id="title-文章標題tags-hexo-fluid-請放入內標籤與標籤之間必須以半形逗號區隔date-2020-03-01-180000"><a class="markdownIt-Anchor" href="#title-文章標題tags-hexo-fluid-請放入內標籤與標籤之間必須以半形逗號區隔date-2020-03-01-180000"></a> title: 文章標題<br />tags: [Hexo, Fluid] # 請放入[]內，標籤與標籤之間必須以半形逗號區隔<br />date: 2020-03-01 18:00:00</h2><p>以下是文章内容<br />在文章中加入分類<br />在每篇文章的開頭加入 categories 屬性，詳細可參閱 官方說明 Front-matter。</p><p>在文章的最下方可以看到本篇文章的分類，每個分類按進去，會跳到同樣屬於此分類的文章統整頁。<br />網站的所有分類也會被集中到分類頁。</p><hr /><p>title: 文章標題<br />tags: [Hexo, Fluid]<br />categories:</p><ul><li>[Blog]</li><li>[主題]<br />date: 2020-03-01 18:00:00</li></ul><hr /><p>以下是文章内容<br />請注意 分類 具有順序性和層級，例如 Blog, themes 不等於 themes, Blog，標籤則沒有順序和層級。</p><p>例如<br />categories:</p><ul><li>Blog</li><li>themes<br />themes 會變成 Blog 的子分類，而不是同一層級的分類。（相當於 Blog 是 themes 的父親）<br />如果需要添加兩個同一層級的分類，可以嘗試以下寫法：</li></ul><p>categories:</p><ul><li>[Blog]</li><li>[themes]<br />被[]包起來的部分就會是同一層級的分類。<br />若想要為文章添加多個分類，其中幾個擁有子分類，可以嘗試以下寫法：</li></ul><p>categories:</p><ul><li>[Blog, themes]</li><li>[Blog, fluid]</li><li>[Hexo]<br />此時這篇文章同時擁有三個分類：themes 和 fluid 都是父分類 Blog 的子分類，同時 Hexo 是一個沒有子分類的分類。</li></ul></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <categories>
      
      <category>Hexo Fluid</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0012.Hexo Fluid主题美化(1)</title>
    <link href="/2268941733/"/>
    <url>/2268941733/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="hexo-fluid主题美化1"><a class="markdownIt-Anchor" href="#hexo-fluid主题美化1"></a> Hexo Fluid主题美化(1)</h1><ul><li><a href="https://qingshaner.com/Hexo%20Fluid%E4%B8%BB%E9%A2%98%E8%83%8C%E6%99%AF%E5%9B%BA%E5%AE%9A(ES6%E6%94%B9%E5%86%99%E7%89%88)%E4%B8%8E%E6%AF%9B%E7%8E%BB%E7%92%83%E5%BA%95%E9%A1%B5/">参考</a></li></ul><h2 id="1背景全屏固定"><a class="markdownIt-Anchor" href="#1背景全屏固定"></a> 1.背景全屏固定</h2><h3 id="根目录新建scripts文件夹新建injectorjs"><a class="markdownIt-Anchor" href="#根目录新建scripts文件夹新建injectorjs"></a> 根目录新建scripts文件夹,新建injector.js</h3><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xquery">const &#123;<span class="hljs-built_in"> root</span>: siteRoot = <span class="hljs-string">&quot;/&quot;</span> &#125; = hexo.config;<br>hexo.extend.injector.register(<span class="hljs-string">&quot;body_begin&quot;</span>, `<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;web_bg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>`);<br>hexo.extend.injector.register(<span class="hljs-string">&quot;body_end&quot;</span>,`<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;$&#123;siteRoot&#125;js/backgroundize.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>`);<br></code></pre></td></tr></table></figure><h3 id="sourcejs目录新建backgroundizejs"><a class="markdownIt-Anchor" href="#sourcejs目录新建backgroundizejs"></a> source/js目录新建backgroundize.js</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-built_in">document</span><br>  .<span class="hljs-built_in">querySelector</span>(<span class="hljs-string">&#x27;#web_bg&#x27;</span>)<br>  .setAttribute(<span class="hljs-string">&#x27;style&#x27;</span>, `background-image: $&#123;<span class="hljs-built_in">document</span>.<span class="hljs-built_in">querySelector</span>(<span class="hljs-string">&#x27;.banner&#x27;</span>).style.background.split(<span class="hljs-string">&#x27; &#x27;</span>)[<span class="hljs-number">0</span>]&#125;;position: fixed;width: <span class="hljs-number">100</span>%;height: <span class="hljs-number">100</span>%;z-index: <span class="hljs-number">-1</span>;background-size: cover;`);<br><br><span class="hljs-built_in">document</span><br>  .<span class="hljs-built_in">querySelector</span>(<span class="hljs-string">&quot;#banner&quot;</span>)<br>  .setAttribute(<span class="hljs-string">&#x27;style&#x27;</span>, <span class="hljs-string">&#x27;background-image: url()&#x27;</span>)<br><br><span class="hljs-built_in">document</span><br>  .<span class="hljs-built_in">querySelector</span>(<span class="hljs-string">&quot;#banner .mask&quot;</span>)<br>  .setAttribute(<span class="hljs-string">&#x27;style&#x27;</span>, <span class="hljs-string">&#x27;background-color:rgba(0,0,0,0)&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="2毛玻璃"><a class="markdownIt-Anchor" href="#2毛玻璃"></a> 2.毛玻璃</h2><h3 id="_configfluidyml修改背景色为透明"><a class="markdownIt-Anchor" href="#_configfluidyml修改背景色为透明"></a> _config.fluid.yml修改背景色为透明</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-meta"># 主面板背景色</span><br><span class="hljs-meta"># Color of main board</span><br><span class="hljs-symbol">board_color:</span> <span class="hljs-string">&quot;#ffffff80&quot;</span><br><span class="hljs-symbol">board_color_dark:</span> <span class="hljs-string">&quot;#00000080&quot;</span><br></code></pre></td></tr></table></figure><h3 id="css文件夹新建cloudedglasscss"><a class="markdownIt-Anchor" href="#css文件夹新建cloudedglasscss"></a> css文件夹新建cloudedGlass.css</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#board</span> &#123;<br>  -webkit-backdrop-<span class="hljs-attribute">filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">5px</span>);<br>  backdrop-<span class="hljs-attribute">filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">5px</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="_configfluidyml引入"><a class="markdownIt-Anchor" href="#_configfluidyml引入"></a> _config.fluid.yml引入</h3><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-comment"># 指定自定义 .css 文件路径，用法和 custom_js 相同</span><br><span class="hljs-comment"># The usage is the same as custom_js</span><br><span class="hljs-attribute">custom_css</span><span class="hljs-punctuation">: </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/css/cloudedGlass.css</span><br></code></pre></td></tr></table></figure><ul><li>兼容性不好,要结合背景图片适当调节背景色使无毛玻璃时也能展示内容</li></ul></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>Fluid</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0010.Chrome浏览器取消置顶的方法</title>
    <link href="/2723000907/"/>
    <url>/2723000907/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="-swig0-"><a class="markdownIt-Anchor" href="#-swig0-"></a> 0010.Chrome浏览器取消置顶的方法</h1><p>Chrome被默认置顶，取消方法为</p><p>在浏览器上按 <code>ALT + Space + C</code>，然后再重开Chrome.</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <categories>
      
      <category>Chrome</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0014.Markdown语法</title>
    <link href="/1011929149/"/>
    <url>/1011929149/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p><a href="https://markdown.com.cn/basic-syntax/">本文参考Markdown 官方教程</a></p><h1 id="1markdown-标题"><a class="markdownIt-Anchor" href="#1markdown-标题"></a> 1.Markdown 标题</h1><p>使用 # 号标记<br />使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。</p><h1 id="2markdown-段落"><a class="markdownIt-Anchor" href="#2markdown-段落"></a> 2.Markdown 段落</h1><p>Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。</p><h1 id="3字体"><a class="markdownIt-Anchor" href="#3字体"></a> 3.字体</h1><p>Markdown 可以使用以下几种字体：<br /><em>斜体文本</em><br /><em>斜体文本</em><br /><strong>粗体文本</strong><br /><strong>粗体文本</strong><br /><em><strong>粗斜体文本</strong></em><br /><em><strong>粗斜体文本</strong></em></p><h1 id="4分隔线"><a class="markdownIt-Anchor" href="#4分隔线"></a> 4.分隔线</h1><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><hr /><hr /><hr /><hr /><hr /><h1 id="5删除线"><a class="markdownIt-Anchor" href="#5删除线"></a> 5.删除线</h1><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：<br /><s>BAIDU.COM</s></p><h1 id="6markdown-列表"><a class="markdownIt-Anchor" href="#6markdown-列表"></a> 6.Markdown 列表</h1><p>Markdown 支持有序列表和无序列表。</p><ul><li>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记，这些标记后面要添加一个空格，然后再填写内容</li><li>有序列表使用数字并加上 . 号来表示</li></ul><h1 id="7代码区块"><a class="markdownIt-Anchor" href="#7代码区块"></a> 7.代码区块</h1><ul><li>代码区块使用 4 个空格或者一个制表符（Tab 键）。</li><li>你也可以用 ``` 包裹一段代码，并指定一种语言（也可以不指定）：</li></ul><h1 id="8markdown-链接"><a class="markdownIt-Anchor" href="#8markdown-链接"></a> 8.Markdown 链接</h1><p>链接使用方法如下：</p><p><code>[链接名称](链接地址)</code></p><p>或者</p><p>&lt;链接地址&gt;</p><h1 id="9markdown-图片"><a class="markdownIt-Anchor" href="#9markdown-图片"></a> 9.Markdown 图片</h1><p>Markdown 图片语法格式如下：</p><p><code>![alt 属性文本](图片地址)</code></p><p><code>![alt 属性文本](图片地址 &quot;可选标题&quot;)</code></p><p>开头一个感叹号 !<br />接着一个方括号，里面放上图片的替代文字<br />接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</p><ul><li>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <img> 标签。</li></ul><p><code>&lt;img src=&quot;http://static.runoob.com/images/runoob-logo.png&quot; width=&quot;50%&quot;&gt;</code></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <categories>
      
      <category>Markdown</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0013.Hexo命令</title>
    <link href="/1204692936/"/>
    <url>/1204692936/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="hexo命令"><a class="markdownIt-Anchor" href="#hexo命令"></a> Hexo命令</h1><h2 id="1查看hexo已经安装的三方包命令"><a class="markdownIt-Anchor" href="#1查看hexo已经安装的三方包命令"></a> 1.查看hexo已经安装的三方包命令</h2><p><code>npm list --depth 0</code></p><p>depth 查看已经三方的深度，默认是显示所有，用0只显示最外层</p><h2 id="2安装与卸载插件"><a class="markdownIt-Anchor" href="#2安装与卸载插件"></a> 2.安装与卸载插件</h2><h3 id="hexo安装xxx插件"><a class="markdownIt-Anchor" href="#hexo安装xxx插件"></a> hexo安装xxx插件</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> xxx –save<br></code></pre></td></tr></table></figure><h3 id="hexo卸载xxx插件"><a class="markdownIt-Anchor" href="#hexo卸载xxx插件"></a> hexo卸载xxx插件</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> uninstall xxx<br></code></pre></td></tr></table></figure><h1 id="hexo-常用命令及备份指南"><a class="markdownIt-Anchor" href="#hexo-常用命令及备份指南"></a> Hexo 常用命令及备份指南</h1><h2 id="常用命令"><a class="markdownIt-Anchor" href="#常用命令"></a> 常用命令</h2><p>hexo n “title” 创建新文章；</p><p>hexo g -d 生成静态文件（gnerate），且文件生成后立即部署网站（deploy）；</p><p>hexo publish “title” 发表草稿；</p><p>hexo s 启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/%EF%BC%9B">http://localhost:4000/；</a></p><p>hexo clean 清除缓存文件 (db.json) 和已生成的静态文件 (public)；</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令；</p><p>hexo version 显示 Hexo 版本；</p><p>npm list 查看插件；</p><p>npm uninstall 插件名称 卸载插件；</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0008.Hexo deploy时出现github port 443 解决方法</title>
    <link href="/398812186/"/>
    <url>/398812186/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>自己有vpn，网页可以打开github。说明命令行在拉取/推送代码时并没有使用vpn进行代理</p><h2 id="1解决办法"><a class="markdownIt-Anchor" href="#1解决办法"></a> 1.解决办法：</h2><p>配置http代理Windows、Linux、Mac OS 中 git 命令相同：</p><p>配置socks5代理<br />git config --global http.proxy socks5 127.0.0.1:7890<br />git config --global https.proxy socks5 127.0.0.1:7890</p><p>配置http代理<br />git config --global http.proxy 127.0.0.1:7890<br />git config --global https.proxy 127.0.0.1:7890</p><h2 id="2注意"><a class="markdownIt-Anchor" href="#2注意"></a> 2.注意：</h2><p>命令中的主机号（127.0.0.1）是使用的代理的主机号(自己电脑有vpn那么本机可看做访问github的代理主机)，即填入127.0.0.1即可，否则填入代理主机 ip(就是网上找的那个ip)<br />命令中的端口号（7890）为代理软件(代理软件不显示端口的话，就去Windows中的代理服务器设置中查看)或代理主机的监听IP，可以从代理服务器配置中获得，否则填入网上找的那个端口port</p><h2 id="3查看代理命令"><a class="markdownIt-Anchor" href="#3查看代理命令"></a> 3.查看代理命令</h2><p>git config --global --get http.proxy<br />git config --global --get https.proxy</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>0009.乙女の剣と秘めごとコンチェルト(少女与剑的秘密协奏曲) 日文攻略</title>
    <link href="/3912306749/"/>
    <url>/3912306749/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p><a href="https://raw.githubusercontent.com/100497/Image_Blog/main/202401/01.jpg" title="封面" class="gallery-item"><img src="https://raw.githubusercontent.com/100497/Image_Blog/main/202401/01.jpg" alt="封面" /></a></p><h1 id="-swig0-"><a class="markdownIt-Anchor" href="#-swig0-"></a> 0009.乙女の剣と秘めごとコンチェルト(少女与剑的秘密协奏曲) 日文攻略</h1><h2 id="playdrm認証"><a class="markdownIt-Anchor" href="#playdrm認証"></a> PlayDRM認証</h2><p>各キャラクリアごとに【EXTRA】⇒【AFTER】に後日談が追加されるので見ておくこと。</p><h2 id="小柴-杏奈"><a class="markdownIt-Anchor" href="#小柴-杏奈"></a> 小柴 杏奈</h2><p>从【START】开始<br />◆SAVE 01<br />杏奈ちゃん</p><p>杏奈END<br />【EXTRA】⇒【AFTER】杏奈</p><h2 id="天海-依夜"><a class="markdownIt-Anchor" href="#天海-依夜"></a> 天海 依夜</h2><p>◆SAVE 01 开始<br />依夜様</p><p>依夜END<br />【EXTRA】⇒【AFTER】依夜</p><h2 id="クレールメルル"><a class="markdownIt-Anchor" href="#クレールメルル"></a> クレール・メルル</h2><p>◆SAVE 01 开始<br />クレール様</p><p>クレールEND<br />【EXTRA】⇒【AFTER】クレール</p><h2 id="椋木-梨理"><a class="markdownIt-Anchor" href="#椋木-梨理"></a> 椋木 梨理</h2><p>◆SAVE 01 开始<br />梨理ちゃん</p><p>梨理END<br />【EXTRA】⇒【AFTER】梨理</p><h2 id="宮守-睦月"><a class="markdownIt-Anchor" href="#宮守-睦月"></a> 宮守 睦月</h2><p>※4人攻略後に<br />◆SAVE 01 开始<br />つーちゃん</p><p>睦月END<br />【EXTRA】⇒【AFTER】SECRET</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.3.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-video.js@1.3.0/dist/lg-video.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-hash.js@1.0.0/dist/lg-hash.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <categories>
      
      <category>Galgame</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Galgame</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
